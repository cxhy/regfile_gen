#! /usr/bin/perl
###############################################################################
#
# Description    :  
# Version        : 0.1
# Author         : guodezheng <cxhy1981@gmail.com>
# Created Time   : 2019-08-04 13:03
# Last Modified  : 2019-08-07 21:59
#
# Copyright (C) 2019 guodezheng <cxhy1981@gmail.com>
# Distributed under terms of the MIT license.
###############################################################################

use strict;
#use warnings;

$| = 1;

use File::Copy;
use IO::Scalar;
use Spreadsheet::Read;
use Spreadsheet::ReadSXC;
use Spreadsheet::ParseXLSX;
use Switch;
use Getopt::Long;
use POSIX qw(strftime);

###############################################################################
#golbal variable
###############################################################################
my @RDarg;

my $g_srcfile_name;

my $g_max_addr_width = 0;

my $g_start_row = 4;
my $g_start_col = 1;

my $g_max_row;
my $g_max_col;

my $g_genfile_name = "default_regfile";
my $g_usr_name     = "TypeYourNameHere";
my $g_sys_name     = $^O;
my $g_data_width   = 32;


push @RDarg, strip => 1;
push @RDarg, attr  => 1;
use vars qw($opt_h $opt_v );
GetOptions(
  'help|h'       => \$opt_h,
  'version|v'    => \$opt_v
) or die $!;

if($opt_h){
  &help_log();
  exit(1);
}

if($opt_v){
  print "0.1\n";
}

$g_srcfile_name = shift(@ARGV);

die "Cannot open file $g_srcfile_name\n" unless(-e $g_srcfile_name);

my $book = ReadData ($g_srcfile_name, @RDarg)->[1] or die "cannot read $g_srcfile_name\n";
$g_max_row = $book->{maxrow};
$g_max_col = $book->{maxcol};
# my $xx = $book->{maxcol};
# my $yy = $book->{maxrow};
# my $cell = cr2cell(3,5);
# my $zz = $book->{$cell};

# print "$xx\n";
# print "$yy\n";
# print "$zz\n";
# print "$book->{attr}[4][5]{merged}\n";

# foreach my $row (1 .. $book->{maxrow}) {
#     foreach my $col (1 .. $book->{maxcol}) {
#         my $cell = cr2cell ($col, $row);
#         printf "%s %-3s %d  ", $cell, $book->{$cell},
#             $book->{attr}[$col][$row]{merged};
#         }
#     print "\n";
#     }

###############################################################################
#main body
###############################################################################
my $cell_tmp = cr2cell(($g_start_col + 1),($g_start_row - 3));
$g_genfile_name = $book->{$cell_tmp};
   $cell_tmp = cr2cell(($g_start_col + 1),($g_start_row - 1));
$g_data_width = $book->{$cell_tmp};


&check_data();

&cal_max_offset();
# print "$g_max_addr_width\n";
# print "$g_data_width\n";

open(my $fh, ">","$g_genfile_name.v");

&write_head();
&write_module_name_and_ports();

close($fh);

###############################################################################
#function
###############################################################################
sub help_log(){
  print "This is help log\n";
}

sub check_data(){
  #检查偏移地址是否与位宽匹配，如果是32位那么地址是不是按照4递增的
  #检查位宽与实际的表格宽度匹配，如果位宽是32位，那么寄存器部分就真的有32位
}

#This function returns the bit width of the largest offset address
sub cal_max_offset(){
  my $cell_tmp = cr2cell($g_start_col,($g_max_row-2));
  my $max_addr_h = $book->{$cell_tmp};
  my $max_addr_b = sprintf "%b", hex(substr($max_addr_h,2));
     $g_max_addr_width = length($max_addr_b);
}

sub write_head(){
  if($g_sys_name =~ /linux/){
    $g_usr_name = $ENV{'USER'};
  }
  elsif($g_sys_name =~ /MSwin32/){
    $g_usr_name = $ENV{'USERNAME'};
  }
  elsif($g_sys_name =~ /darwin/){
    $g_usr_name = $ENV{'USER'};
  }
  else{
    $g_usr_name = "TypeYourNameHere";
  }
  my $datetime=strftime("%Y-%m-%d %H:%M", localtime(time));
  print $fh "// ******************************************************************************\n";
  print $fh "// File Name      : $g_genfile_name.v\n";
  print $fh "// Generated By   : $g_usr_name\n";
  print $fh "// Created Time   : $datetime\n";
  print $fh "// Last Modifie  : $datetime\n";
  print $fh "// Created By     : cxhy\n";
  print $fh "// if you find any bugs when generating this file, please let me know\n";
  print $fh "// cxhy1981\@gmail.com\n";
  print $fh "// ******************************************************************************\n";
}

sub write_module_name_and_ports(){

  print $fh "\
module $g_genfile_name
#(
  parameter DATA_WIDTH = $g_data_width,
  parameter ADDR_WIDTH = $g_max_addr_width
)
(

);




  ";
}

